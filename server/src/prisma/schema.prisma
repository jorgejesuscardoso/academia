generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "windows"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id       Int      @id @default(autoincrement())
  nome     String
  email    String   @unique
  telefone String?
  username String?
  senha    String
  turno    String
  role     String
  foto     String?
  lembretes Lembrete[]
  eventos   Evento[]
  publicacoes Publicacao[]
}

model Lembrete {
  id          Int      @id @default(autoincrement())
  tipo        String
  titulo      String
  data        DateTime
  conteudo    String
  concluido   Boolean
  imagem      String?
  usuario     User     @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  updatedBy   String?
  usuarioId   Int
}

model Evento {
  id          Int      @id @default(autoincrement())
  tipo        String
  titulo      String
  conteudo    String
  imagem      String?
  usuario     User     @relation(fields: [usuarioId], references: [id])
  usuarioId   Int
  createdAt   DateTime @default(now())
  updatedBy   String?
  updatedAt   DateTime @updatedAt
}

model Publicacao {
  id          Int      @id @default(autoincrement())
  tipo        String
  titulo      String
  conteudo    String
  usuario     User     @relation(fields: [usuarioId], references: [id])
  usuarioId   Int
  imagem      String?
  createdAt   DateTime @default(now())
  updatedBy   String?
  updatedAt   DateTime @updatedAt
}

model Cliente {
  id          Int      @id @default(autoincrement())
  nome        String
  email       String   @unique
  telefone    String?
  dataNascimento  DateTime
  dataInicio  DateTime @default(now())
  vencimento  DateTime?
  plano       Plano    @relation(fields: [planoId], references: [id], onDelete: Cascade)
  status      String   @default("Ativo")
  planoId     Int      
  purchased   Purchase[]
}

model Instrutor {
  id          Int      @id @default(autoincrement())
  nome        String
  email       String   @unique
  telefone    String?
  turno       String 
}

model Plano {
  id          Int      @id @default(autoincrement())
  nome        String   @unique
  valor       Float
  descricao   String?
  clientes    Cliente[]
}

model Product {
  id         Int         @id @default(autoincrement())
  name       String
  price      Float
  stored   Int
  brand      String?
  category   String?
  thumbnail  String?
  description String?
  purchases  Purchase[] 
}

model Purchase {
  id         Int       @id @default(autoincrement())
  clientId   Int
  productId  Int
  client     Cliente    @relation(fields: [clientId], references: [id])
  product    Product  @relation(fields: [productId], references: [id])
  qtd_saled   Int
  createdAt  DateTime  @default(now())
}
